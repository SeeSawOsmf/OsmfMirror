/*****************************************************
*  
*  Copyright 2009 Adobe Systems Incorporated.  All Rights Reserved.
*  
*****************************************************
*  The contents of this file are subject to the Mozilla Public License
*  Version 1.1 (the "License"); you may not use this file except in
*  compliance with the License. You may obtain a copy of the License at
*  http://www.mozilla.org/MPL/
*   
*  Software distributed under the License is distributed on an "AS IS"
*  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
*  License for the specific language governing rights and limitations
*  under the License.
*   
*  
*  The Initial Developer of the Original Code is Adobe Systems Incorporated.
*  Portions created by Adobe Systems Incorporated are Copyright (C) 2009 Adobe Systems 
*  Incorporated. All Rights Reserved. 
*  
*****************************************************/
package org.osmf.elements
{
	import flash.events.Event;
	import flash.events.TimerEvent;
	import flash.utils.Timer;
	
	import flexunit.framework.TestCase;
	
	import mx.utils.Base64Decoder;
	
	import org.osmf.events.DRMEvent;
	import org.osmf.events.MediaElementEvent;
	import org.osmf.media.*;
	import org.osmf.metadata.*;
	import org.osmf.net.StreamingURLResource;
	import org.osmf.traits.*;

	public class TestVideoElement extends TestCase
	{
		protected static const IDENT_METADATA_EXTERNAL:String = "http://moonpie.corp.adobe.com/HTTP/FLV/_CHIVES_2.0/Identity/Snowdome.flv.metadata";
		protected static const IDENT_ENCRYPTED:String = "http://moonpie.corp.adobe.com/HTTP/FLV/_CHIVES_2.0/Identity/Snowdome.flv";
		protected static const IDENT_METADATA:String = "";
		protected static const ANONYMOUS_METADATA_EXTERNAL:String = "http://moonpie.corp.adobe.com/HTTP/FLV/_CHIVES_2.0/Anonymous/Aquarium.flv.metadata";
		protected static const ANONYMOUS_ENCRYPTED:String = "http://moonpie.corp.adobe.com/HTTP/FLV/_CHIVES_2.0/Anonymous/Aquarium.flv";
		protected static const ANONYMOUS_METADATA:String = "";
					
		
		//private static const ANONYMOUS_METADATA:String = "";
		//private static const ANONYMOUS_ENCRYPTED:String = "http://moonpie.corp.adobe.com/HTTP/FLV/_DILL_2.0/Anonymous/Magic_Music.flv";
		
		//private static const IDENT_METADATA:String = "";
		//private static const IDENT_ENCRYPTED:String = "http://moonpie.corp.adobe.com/HTTP/FLV/_DILL_2.0/Identity/Cat_Soup.flv";
		
		//In file metadata
		private static const ANONYMOUS_INLINE:String = "http://moonpie.corp.adobe.com/HTTP/FLV/_CHIVES_2.0/Anonymous/Aya_momoiro.flv";
		private static const IDENT_INLINE:String = "http://moonpie.corp.adobe.com/HTTP/FLV/_CHIVES_2.0/Identity/Aya_dokidoki.flv";
		
		private var mediaPlayer:MediaPlayer = new MediaPlayer();
		
		public function testAnonSidecar():void
		{					
			//Anonymous w/ metadata sidecar
			
			var decoder:Base64Decoder = new Base64Decoder();
			decoder.decode(ANONYMOUS_METADATA);				
			//Separate DRM metadata										
			
			var resource:StreamingURLResource = new StreamingURLResource(ANONYMOUS_ENCRYPTED);
			resource.drmContentData = decoder.toByteArray();
			
			testElementAnon(resource);								
		}
		
		override public function tearDown():void
		{
			mediaPlayer.media = null;				
		}

		public function testIdentSidecar():void
		{						 
			// Identity based credentials w/ metadata sidecar
			
			var decoder:Base64Decoder = new Base64Decoder();
			decoder.decode(IDENT_METADATA);				
			// Separate DRM metadata										
			var resource:StreamingURLResource = new StreamingURLResource(IDENT_ENCRYPTED);
			resource.drmContentData = decoder.toByteArray();
			
			testElementCred(resource, "dmo", "password");
		}	
					
		public function testAnonEncrypted():void
		{
			// Anonymous Encrypted content without metadata sidecar
			var resource:URLResource = new URLResource(ANONYMOUS_INLINE);
			var protectable:DRMTrait;
			var testFinished:Function = addAsync( function (event:Event):void {}, 20000);
			
			// We never get the IContentProtectableTrait here, so we have to basicly dectect decyption by checking for  the files duration
			var elem:VideoElement = new VideoElement(resource);
			
			
					
			mediaPlayer =  new MediaPlayer();
			mediaPlayer.media = elem;
			
			elem.addEventListener(MediaElementEvent.TRAIT_ADD,  onTrait );
			
			function onTrait(event:MediaElementEvent):void
			{
				if (event.traitType == MediaTraitType.DRM)
				{
					protectable = (elem.getTrait(MediaTraitType.DRM) as DRMTrait);					
					elem.removeEventListener(MediaElementEvent.TRAIT_ADD,  onTrait);				
					assertNotNull(protectable);
					//This  is as far as we get with anonymous inline.
					var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
						timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
						timer.start();			
				}
			}	
													
			function onFinished(event:TimerEvent):void
			{
				testFinished(null);
			}					
							
		}
		
		public function testAuthenticationToken():void
		{		
			var testFinished:Function = addAsync( function (event:Event):void {}, 20000);
									
			var decoder:Base64Decoder = new Base64Decoder();
			decoder.decode(IDENT_METADATA);				
			// Separate DRM metadata										
			var resource:StreamingURLResource = new StreamingURLResource(IDENT_ENCRYPTED);
			resource.drmContentData = decoder.toByteArray();

			var elem:VideoElement = new VideoElement(resource);
			var protectable:DRMTrait;
		
			elem.addEventListener(MediaElementEvent.TRAIT_ADD,  onTrait );
				
			var token:Object;
										
			mediaPlayer.media = elem;
			
			function onTrait(event:MediaElementEvent):void
			{
				if (event.traitType == MediaTraitType.DRM)
				{
					protectable = (elem.getTrait(MediaTraitType.DRM) as DRMTrait);
					protectable.addEventListener(DRMEvent.DRM_STATE_CHANGE, onStateChange );	
					elem.removeEventListener(MediaElementEvent.TRAIT_ADD,  onTrait);				
					if ( protectable.drmState == DRMState.AUTHENTICATION_COMPLETE)
					{
						var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
						timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
						timer.start();
					}
				}
			}
			
			if (protectable && protectable.drmState == DRMState.AUTHENTICATION_COMPLETE)
			{				
				var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
				timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
				timer.start();
			}
			function onStateChange(event:DRMEvent):void
			{				
				switch(protectable.drmState)
				{
					case DRMState.AUTHENTICATION_NEEDED:
						protectable.authenticate("dmo", "password");
						break;
					case DRMState.AUTHENTICATION_COMPLETE:
						protectable.removeEventListener(DRMEvent.DRM_STATE_CHANGE, onStateChange );
						token = event.token;					
						var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
						timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
						timer.start();
						break;
				}
			}
										
			function onFinished(event:TimerEvent):void
			{
				mediaPlayer.media = null;
				mediaPlayer.media = new VideoElement(resource);
				protectable = (mediaPlayer.media.getTrait(MediaTraitType.DRM) as DRMTrait);
				protectable.addEventListener(DRMEvent.DRM_STATE_CHANGE, onTokenAuth);
				protectable.authenticateWithToken(token);
			}
			function onTokenAuth(event:DRMEvent):void
			{
				switch(protectable.drmState)
				{
					case DRMState.AUTHENTICATION_COMPLETE:
						testFinished(null);
						break;
				}
			}
		}
	
		public function testIdentEncrypted():void
		{
			// Identity Encrypted content without metadata sidecar
			var resource:URLResource = new URLResource(IDENT_INLINE);
			testElementCred(resource, "dmo", "password");				
		}
		
		private function testElementCred(resource:MediaResourceBase, user:String, pass:String):void
		{
			var testFinished:Function = addAsync( function (event:Event):void {}, 20000);
			
			var elem:VideoElement = new VideoElement(resource);
			var protectable:DRMTrait;
			
			elem.addEventListener(MediaElementEvent.TRAIT_ADD,  onTrait );
						
			mediaPlayer.media = elem;
			
			function onTrait(event:MediaElementEvent):void
			{
				if (event.traitType == MediaTraitType.DRM)
				{
					protectable = (elem.getTrait(MediaTraitType.DRM) as DRMTrait);
					protectable.addEventListener(DRMEvent.DRM_STATE_CHANGE, onStateChange );	
					elem.removeEventListener(MediaElementEvent.TRAIT_ADD,  onTrait);
					if ( protectable.drmState == DRMState.AUTHENTICATION_COMPLETE)
					{
						var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
						timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
						timer.start();
					}
				}
			}
			
			if (protectable && protectable.drmState == DRMState.AUTHENTICATION_COMPLETE)
			{				
				var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
				timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
				timer.start();
			}
			function onStateChange(event:DRMEvent):void
			{
				switch(protectable.drmState)
				{
					case DRMState.AUTHENTICATION_NEEDED:
						protectable.authenticate(user, pass);
						break;
					case DRMState.AUTHENTICATION_COMPLETE:
						var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
						timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
						timer.start();
						break;	
				}
			}				
			function onFinished(event:TimerEvent):void
			{
				testFinished(null);
			}
		}
				
		private function testElementAnon(resource:MediaResourceBase):void
		{						
			var testFinished:Function = addAsync( function (event:Event):void {}, 20000);
					
			var protectable:DRMTrait;
			var elem:VideoElement = new VideoElement(resource);
			
			elem.addEventListener(MediaElementEvent.TRAIT_ADD,  onTrait );
						
			mediaPlayer.media = elem;
			
			function onTrait(event:MediaElementEvent):void
			{					
				if (event.traitType == MediaTraitType.DRM)
				{
					protectable = (elem.getTrait(MediaTraitType.DRM) as DRMTrait);
					protectable.addEventListener(DRMEvent.DRM_STATE_CHANGE, onStateChange);
					if ( protectable.drmState == DRMState.AUTHENTICATION_COMPLETE)
					{
						var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
						timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
						timer.start();
					}
				}
				
			}
			
			if (protectable && protectable.drmState == DRMState.AUTHENTICATION_COMPLETE)
			{				
				var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
				timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
				timer.start();
			}
			
			function onStateChange(event:DRMEvent):void
			{				
				switch(protectable.drmState)
				{				
					case DRMState.AUTHENTICATION_COMPLETE:
						var timer:Timer = new Timer(0, 1); //required to let the video element finish loading
						timer.addEventListener(TimerEvent.TIMER_COMPLETE, onFinished);
						timer.start();
						break;	
				}
			}				
								
			function onFinished(event:TimerEvent):void
			{
				testFinished(null);
			}						
		}
	}
}